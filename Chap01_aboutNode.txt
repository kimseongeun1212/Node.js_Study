9/13 노드 스터디

Node.js 는 크롬 VB 자바스크립트 엔진으로 빌드된 자바스크립트 런타임입니다.

노드는 서버가 아닐까?
1. 서버의 역할도 수행할 수있는 자바스크립트 런타임
2. 노드로 자바스크립트로 작성된 실행 할 수 있음.
3. 서버 실행을 위해 필요한 http/https/http2모듈을 제공

노드:자바스크립트 런타임
런타임: 특정언어로 만든 프로그램들을 실행할 수 있게 하는 가상 머신의 상태
즉, 노드는 자바스크립트로 만든 프로그램을 실행 시킬 수 있게 해줌
다른 런타임으로는 웹브라우저가 있음.(크롬, 엣지, 사파리, 폭스)등 

노드는 V8과 libuv를 내부적으로 포함.
노드의 내부구조는 모두 C++로 되어있음.

        -노드 내부구조-
      Node.js Core Library
        Node.js Bindings 
    V8                libuv
    ▼                   ▼
 오픈 소스            비동기 I/O
자바스크립트
   엔진


●이벤트 기반
이벤트가 발생할때 미리 지정해둔 작업을 수행하는 방식
이벤트의 예: 클릭, 이벤트를 등록하는 함수
콜백함수: 이벤트가 발생했을 때 실행될 함수

●논블로킹 I/O
논블로킹:  오래걸리는 함수를 백그라운드로 보내서 다음 코드가 먼저 실행하게 되고,
나중에 오래 걸리는 함수를 실핼
-논 블로킹 방식 하에서 일부 코드는 백그라운드에서 병렬 실행됨
-일부 코드: I/O작업(파일 시스템 접근, 네트워크 요청), 압축, 암호화 등
-나머지 코드는 블로킹 방식으로 실행됨. I/O는 작업이 많을때 노드 활용성이 극대화됨.
 (**블로킹은 코드가 순서대로 돌아가는 것)
-> 노드는 거의 다 논블로킹이면서 동기임

●프로세스 vs 스레드
프로세스:  운영체제에서 할당하는 작업의 단위, 프로세스 간 자원 공유X
스레드: 프로세스 내에서 실행되는 작업의 단위, 부모 프로세스 자원 공유

노드 프로세스는 멀티 스레드이지만 직접 다룰 수 있는 스레드는 하나이기에 싱글 스레드라고 표현
주로 멀티 스레드 대신 멀티 프로세스 사용

           운영체제
프로세스    프로세스    프로세스
 스레드      스레드      스레드
 스레드      스레드      스레드
 스레드      스레드      스레드
  
●싱글 스레드
효율적인 구조는 아님
●멀티 스레드
멀티 스레드는 에러 발생시 새로운 스레드를 생성하여 극복
하지만 프로그래밍 난이도도 어렵고, 스레드 수만큼 자원 많이 쓰임

●서버로서의 노드
서버: 네트워크를 통해 클라이언트에 정보나 서비스를 젝ㅇ하는 컴퓨터또는 프로그램
클라이언트:서버에 요청을 보내는 주체(브라우저, 데스크탑 프로그램, 모바일앱, 다른 서벙[ 요청을 보내는 서버)
 ex) 핸드폰이 클라이언트 앱은 어딘가에서 돌아가고있는 서버 
 ex) 브라우저가 클라이언트 웹사이트는 서버
노드!=서버
but, 노드는 서버를 구성할 수 있게 하는 모듈을 제공

노드 서버의 장단점
<장점>
1. 멀티스레드 방식에 비해 컴퓨터 자원을 적게 사용함.
2. I/O작업이 많은 서버로 적합
3. 멀티 스레드 방식보다 쉬움
4. 웹서버가 내장되어있음
5. 자바스크립트를 사용함
6. json형식과 호환 쉬움
<단점>
1. 싱글스레드라서  CPU코어를 하나만 사용
2. 어중간한 성능

*노드가 빠르긴 하지만 노드보타 빠른 서버는 더 많다.
